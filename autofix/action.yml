name: area44/autofix.ci
description: Run autofix.ci

runs:
  using: "composite"
  steps:
    - name: Detect Node.js version and package manager
      id: detect_env
      uses: area44/workflows/detect-env@v3.0.0

    - name: Setup PNPM
      if: ${{ steps.detect_env.outputs.package_manager == 'pnpm' }}
      uses: pnpm/action-setup@v4
      with:
        version: ${{ steps.detect_env.outputs.package_manager_version }}

    - name: Setup Bun
      if: ${{ steps.detect_env.outputs.package_manager == 'bun' }}
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: ${{ steps.detect_env.outputs.package_manager_version }}

    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: ${{ steps.detect_env.outputs.node_version }}
        cache-dependency-path: |
          **/package-lock.json
          **/pnpm-lock.yaml
          **/yarn.lock
          **/bun.lock

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          ~/.npm
          ~/.pnpm-store
          ~/.yarn/cache
          ~/.bun/install/cache
        key: ${{ runner.os }}-${{ steps.detect_env.outputs.package_manager }}-${{ hashFiles('**/package.json', '**/*.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ steps.detect_env.outputs.package_manager }}-

    - name: Install dependencies
      shell: bash
      run: |
        case "${{ steps.detect_env.outputs.package_manager }}" in
          pnpm) pnpm install --prefer-offline --no-frozen-lockfile ;;
          yarn) yarn install --prefer-offline ;;
          bun)  bun install ;;
          *)    npm ci ;;
        esac

    - name: Run `check` or `format` script
      shell: bash
      run: |
        package_manager="${{ steps.detect_env.outputs.package_manager }}"
        script=""

        if [[ -f package.json ]]; then
          jq -e '.scripts.check' package.json > /dev/null && script="check"
          [[ -z "$script" ]] && jq -e '.scripts.format' package.json > /dev/null && script="format"
        fi

        if [[ -n "$script" ]]; then
          "$package_manager" run "$script"
        else
          echo "No 'check' or 'format' script found."
        fi

    - name: Run autofix.ci
      uses: autofix-ci/action@v1
