name: area44/autofix.ci
description: Run autofix.ci

runs:
  using: "composite"
  steps:
    - name: Detect Node.js version and package manager
      id: detect_env
      shell: bash
      run: |
        if [[ -f .nvmrc ]]; then
          NODE_VERSION=$(<.nvmrc)
        else
          NODE_VERSION="lts/*"
        fi

        PM=""
        PM_VERSION="latest"

        [[ -f pnpm-lock.yaml ]] && PM="pnpm"
        [[ -f yarn.lock ]] && PM="${PM:-yarn}"
        [[ -f package-lock.json ]] && PM="${PM:-npm}"
        [[ -f bun.lock ]] && PM="${PM:-bun}"

        if [[ -z "$PM" && -f package.json ]]; then
          RAW_PM=$(jq -r '.packageManager // empty' package.json)
          if [[ -n "$RAW_PM" ]]; then
            PM="${RAW_PM%%@*}"
            PM_VERSION="${RAW_PM#*@}"
            [[ "$PM" == "$PM_VERSION" ]] && PM_VERSION="latest"
          else
            PM="npm"
          fi
        fi

        echo "NODE_VERSION=$NODE_VERSION" >> "$GITHUB_OUTPUT"
        echo "PM_NAME=$PM" >> "$GITHUB_OUTPUT"
        echo "PM_VERSION=$PM_VERSION" >> "$GITHUB_OUTPUT"
        echo "Detected Node.js: $NODE_VERSION | Package Manager: $PM@$PM_VERSION"

    - name: Setup PNPM
      if: ${{ steps.detect_env.outputs.PM_NAME == 'pnpm' }}
      uses: pnpm/action-setup@v4
      with:
        version: ${{ steps.detect_env.outputs.PM_VERSION }}

    - name: Setup Bun
      if: ${{ steps.detect_env.outputs.PM_NAME == 'bun' }}
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: ${{ steps.detect_env.outputs.PM_VERSION }}

    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: ${{ steps.detect_env.outputs.NODE_VERSION }}
        cache-dependency-path: |
          **/package-lock.json
          **/pnpm-lock.yaml
          **/yarn.lock
          **/bun.lock

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          ~/.npm
          ~/.pnpm-store
          ~/.yarn/cache
          ~/.bun/install/cache
        key: ${{ runner.os }}-${{ steps.detect_env.outputs.PM_NAME }}-${{ hashFiles('**/package.json', '**/*.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ steps.detect_env.outputs.PM_NAME }}-

    - name: Install dependencies
      shell: bash
      run: |
        case "${{ steps.detect_env.outputs.PM_NAME }}" in
          pnpm) pnpm install --prefer-offline --no-frozen-lockfile ;;
          yarn) yarn install --prefer-offline ;;
          bun)  bun install ;;
          *)    npm ci ;;
        esac

    - name: Run `check` or `format` script
      shell: bash
      run: |
        PM="${{ steps.detect_env.outputs.PM_NAME }}"
        SCRIPT=""

        if [[ -f package.json ]]; then
          jq -e '.scripts.check' package.json > /dev/null && SCRIPT="check"
          [[ -z "$SCRIPT" ]] && jq -e '.scripts.format' package.json > /dev/null && SCRIPT="format"
        fi

        if [[ -n "$SCRIPT" ]]; then
          $PM run "$SCRIPT"
        else
          echo "No 'check' or 'format' script found."
        fi

    - name: Run autofix.ci
      uses: autofix-ci/action@v1
