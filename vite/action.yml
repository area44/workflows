name: area44/vite
description: Build and Deploy with Vite

inputs:
  run_deploy:
    description: Whether to run the deploy step
    required: false
    default: 'false'

outputs:
  should_deploy:
    description: Whether the site should be deployed
    value: ${{ steps.set_output.outputs.should_deploy }}

runs:
  using: "composite"
  steps:
    - name: Determine Node.js version
      id: get_node_version
      shell: bash
      run: |
        if [[ -f ".nvmrc" ]]; then
          echo "NODE_VERSION=$(cat .nvmrc | tr -d '\n')" >> "$GITHUB_OUTPUT"
        elif node_version=$(jq -r '.engines.node // empty' package.json); [[ -n "$node_version" ]]; then
          echo "NODE_VERSION=$node_version" >> "$GITHUB_OUTPUT"
        else
          echo "NODE_VERSION=lts/*" >> "$GITHUB_OUTPUT"
        fi

    - name: Detect package manager
      id: detect_pm
      shell: bash
      run: |
        default_pm="npm"
        default_pm_version="latest"
        if [[ -f "package.json" ]] && jq -e '.packageManager' package.json > /dev/null; then
          raw_pm=$(jq -r '.packageManager' package.json)
          pm_name="${raw_pm%@*}"
          pm_version="${raw_pm#*@}"
        elif [[ -f "pnpm-lock.yaml" ]]; then
          pm_name="pnpm"
          pm_version=$(npx -y pnpm --version 2>/dev/null || echo "latest")
        elif [[ -f "yarn.lock" ]]; then
          pm_name="yarn"
          pm_version=$(yarn -v 2>/dev/null || echo "latest")
        elif [[ -f "bun.lock" ]]; then
          pm_name="bun"
          pm_version=$(bun --version 2>/dev/null || echo "latest")
        else
          pm_name="$default_pm"
          pm_version=$(npm -v 2>/dev/null || echo "$default_pm_version")
        fi
        echo "PM_NAME=$pm_name" >> "$GITHUB_OUTPUT"
        echo "PM_VERSION=$pm_version" >> "$GITHUB_OUTPUT"

    - name: Setup PNPM
      if: ${{ steps.detect_pm.outputs.PM_NAME == 'pnpm' }}
      uses: pnpm/action-setup@v4
      with:
        version: ${{ steps.detect_pm.outputs.PM_VERSION }}

    - name: Setup Bun
      if: ${{ steps.detect_pm.outputs.PM_NAME == 'bun' }}
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: ${{ steps.detect_pm.outputs.PM_VERSION }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ steps.get_node_version.outputs.NODE_VERSION }}
        cache: ${{ steps.detect_pm.outputs.PM_NAME }}

    - name: Install dependencies
      shell: bash
      run: |
        case "${{ steps.detect_pm.outputs.PM_NAME }}" in
          pnpm) pnpm install --no-frozen-lockfile ;;
          yarn) yarn install ;;
          bun)  bun install ;;
          *)    npm install ;;
        esac

    - name: Build with Vite
      shell: bash
      run: |
        case "${{ steps.detect_pm.outputs.PM_NAME }}" in
          pnpm) pnpm build ;;
          yarn) yarn build ;;
          bun)  bun run build ;;
          *)    npm run build ;;
        esac

    - name: Upload site artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: dist

    - name: Set deploy condition
      id: set_output
      shell: bash
      env:
        GITHUB_EVENT_NAME: ${{ github.event_name }}
        GITHUB_REF: ${{ github.ref }}
        RUN_DEPLOY: ${{ inputs.run_deploy }}
      run: |
        should_deploy=false
        if [[ "$GITHUB_EVENT_NAME" == "push" && "$GITHUB_REF" == "refs/heads/main" ]]; then
          should_deploy=true
        elif [[ "$GITHUB_EVENT_NAME" == "workflow_dispatch" && "$RUN_DEPLOY" == "true" ]]; then
          should_deploy=true
        fi
        echo "should_deploy=$should_deploy" >> "$GITHUB_OUTPUT"

